pubkey = File.read("/Users/phiro/.ssh/id_rsa.pub")

cluster_master= {
  "kube-master" => { :ip => "192.168.51.2", :port => 2222, :cpus => 8 , :mem => 4096},
}

cluster_node = {
  "kube-node1" => { :ip => "192.168.51.3", :port => 2200, :cpus => 2 , :mem => 4096 },
  "kube-node2" => { :ip => "192.168.51.4", :port => 2201, :cpus => 2 , :mem => 4096 },
  "kube-node3" => { :ip => "192.168.51.5", :port => 2202, :cpus => 2 , :mem => 4096 },
  "kube-node4" => { :ip => "192.168.51.6", :port => 2203, :cpus => 2 , :mem => 4096 },
}

Vagrant.configure("2") do |config|
  config.vm.provision "shell", inline: "sudo apt update && sudo apt upgrade -y && sudo apt install sshpass -y"
  config.vm.boot_timeout = 600
  config.vm.disk :disk, size: "30GB", primary: true

  cluster_master.each_with_index do |(hostname, info), index|
    config.vm.define hostname do |kube_master|
      kube_master.vm.box = "corevm_arm_gui"
      kube_master.vm.network "private_network", ip: "#{info[:ip]}", netmask: "255.255.255.0"
      kube_master.vm.hostname = hostname
      kube_master.vm.synced_folder '.', '/vagrant', disabled: true
      kube_master.vm.network "forwarded_port", guest: 8001, host: 8101
      kube_master.vm.network "forwarded_port", guest: 8443, host: 9443
      kube_master.vm.network "forwarded_port", guest: 22, host: "#{info[:port]}".to_i
      kube_master.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "/Users/phiro/.ssh/id_rsa"]
      kube_master.vm.provision "shell", inline:  <<-SHELL
        mkdir -p /root/.ssh
        echo #{pubkey} >> /home/vagrant/.ssh/authorized_keys
        echo #{pubkey} >> /root/.ssh/authorized_keys
      SHELL
      kube_master.vm.provision "shell", inline: "sudo apt update && sudo apt upgrade -y && sudo apt install sshpass terminator firefox -y "
      kube_master.vm.provider "parallels" do |v|
        v.cpus = "#{info[:cpus]}".to_i
        v.memory = "#{info[:mem]}".to_i
        v.check_guest_additions = true
        v.linked_clone = false
      end
    end

  end # cluster masters


  cluster_node.each_with_index do |(hostname, info), index|
      config.vm.define hostname do |node|
          node.vm.box = "corevm_arm_node"
          node.vm.network "private_network", ip: "#{info[:ip]}", netmask: "255.255.255.0"
          node.vm.hostname = hostname
          node.vm.network "forwarded_port", guest: 22, host: "#{info[:port]}".to_i
          node.ssh.private_key_path = ["~/.vagrant.d/insecure_private_key", "/Users/phiro/.ssh/id_rsa"]
          node.vm.provision "shell", inline:  <<-SHELL
            mkdir -p /root/.ssh
            echo #{pubkey} >> /home/vagrant/.ssh/authorized_keys
            echo #{pubkey} >> /root/.ssh/authorized_keys
          SHELL
          node.vm.provision "shell", inline: "sudo apt update && sudo apt upgrade -y && sudo apt install sshpass -y "
          node.vm.provider :parallels do |v|
            v.linked_clone = false
            v.check_guest_additions = false
            v.cpus = "#{info[:cpus]}".to_i
            v.memory = "#{info[:mem]}".to_i
          end
          node.vm.synced_folder '.', '/vagrant', disabled: true
      end
  end #node cluster


end